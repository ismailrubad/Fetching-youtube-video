{"version":3,"sources":["components/SearchBar.js","apis/youtube.js","components/VideoItem.js","components/VideoList.js","components/VideoDetail.js","components/App.js","index.js"],"names":["SearchBar","state","term","onInputChange","event","_this","setState","target","value","onFormSubmit","preventDefault","props","react_default","a","createElement","className","onSubmit","this","type","onChange","React","Component","axios","create","baseURL","params","part","maxResults","key","VideoItem","onClick","onVideoSelect","video","alt","snippet","title","src","thumbnails","medium","url","VideoList","rederedList","videos","map","src_components_VideoItem","id","videoId","VideoDetail","videoSrc","concat","description","App","selectedVideo","onTermSubmit","_callee","response","regenerator_default","wrap","_context","prev","next","youtube","get","q","sent","data","items","stop","console","log","components_SearchBar","components_VideoDetail","components_VideoList","ReactDOM","render","components_App","document","querySelector"],"mappings":"yPAmCeA,6MAhCXC,MAAQ,CAACC,KAAM,MAEfC,cAAgB,SAACC,GACbC,EAAKC,SAAS,CAAEJ,KAAME,EAAMG,OAAOC,WAGvCC,aAAe,SAAAL,GACXA,EAAMM,iBAINL,EAAKM,MAAMF,aAAaJ,EAAKJ,MAAMC,+EAInC,OACIU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACXH,EAAAC,EAAAC,cAAA,QAAME,SAAUC,KAAKR,aAAcM,UAAU,WACzCH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,SACII,KAAK,OACLV,MAAOS,KAAKhB,MAAMC,KAClBiB,SAAUF,KAAKd,0BAxBnBiB,IAAMC,mBCEfC,WAAMC,OAAO,CACxBC,QAAS,wCACTC,OAAQ,CACJC,KAAM,UACNC,WAAY,EACZC,IAPI,6CCgBGC,SAfG,SAAClB,GACf,OACIC,EAAAC,EAAAC,cAAA,OAAKgB,QAAS,kBAAMnB,EAAMoB,cAAcpB,EAAMqB,QAAQjB,UAAU,mBAC5DH,EAAAC,EAAAC,cAAA,OACImB,IAAKtB,EAAMqB,MAAME,QAAQC,MACzBpB,UAAU,WACVqB,IAAOzB,EAAMqB,MAAME,QAAQG,WAAWC,OAAOC,MAEjD3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAUJ,EAAMqB,MAAME,QAAQC,WCA9CK,EATG,SAAC7B,GAEf,IAAM8B,EAAc9B,EAAM+B,OAAOC,IAAI,SAACX,GAClC,OAAOpB,EAAAC,EAAAC,cAAC8B,EAAD,CAAWhB,IAAKI,EAAMa,GAAGC,QAASd,MAAOA,EAAOD,cAAepB,EAAMoB,kBAGhF,OAAOnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAA2B0B,ICctCM,EArBK,SAACpC,GAEjB,IAAIA,EAAMqB,MACN,OAAOpB,EAAAC,EAAAC,cAAA,yBAGX,IAAMkC,EAAQ,6BAAAC,OAAgCtC,EAAMqB,MAAMa,GAAGC,SAE7D,OACIlC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,UAAQsB,IAAKY,KAEjBpC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAaJ,EAAMqB,MAAME,QAAQC,OAC/CvB,EAAAC,EAAAC,cAAA,SAAIH,EAAMqB,MAAME,QAAQgB,gBCoCzBC,6MA5CXlD,MAAQ,CAAEyC,OAAQ,GAAIU,cAAe,QAMrCC,mDAAe,SAAAC,EAAOpD,GAAP,IAAAqD,EAAA,OAAAC,EAAA3C,EAAA4C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAEYC,EAAQC,IAAI,UAAW,CAC1CrC,OAAQ,CACJsC,EAAG7D,KAJA,OAELqD,EAFKG,EAAAM,KAQX3D,EAAKC,SAAS,CACVoC,OAAQa,EAASU,KAAKC,MACtBd,cAAeG,EAASU,KAAKC,MAAM,KAV5B,wBAAAR,EAAAS,SAAAb,8DAcfvB,cAAgB,SAAAC,GACZ3B,EAAKC,SAAS,CAAC8C,cAAepB,IAC9BoC,QAAQC,IAAI,gBAAiBrC,uFAnB7Bf,KAAKoC,aAAa,8CAuBlB,OACIzC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAACwD,EAAD,CAAW7D,aAAcQ,KAAKoC,eAC9BzC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAACyD,EAAD,CAAavC,MAAOf,KAAKhB,MAAMmD,iBAEnCxC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAC0D,EAAD,CAAWzC,cAAed,KAAKc,cAAeW,OAAQzB,KAAKhB,MAAMyC,oBArC3EtB,IAAMC,WCHxBoD,IAASC,OACL9D,EAAAC,EAAAC,cAAC6D,EAAD,MACAC,SAASC,cAAc","file":"static/js/main.62515946.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass SearchBar extends React.Component {  \r\n    state = {term: ''}\r\n\r\n    onInputChange = (event) => {\r\n        this.setState({ term: event.target.value })\r\n    }\r\n\r\n    onFormSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        // TODO: Make sure we call\r\n        // callback from parent componenet\r\n        this.props.onFormSubmit(this.state.term);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"search-bar ui segment\">\r\n                <form onSubmit={this.onFormSubmit} className=\"ui form\">\r\n                    <div className=\"field\">\r\n                        <label>Video Search</label>\r\n                        <input \r\n                            type=\"text\"\r\n                            value={this.state.term}\r\n                            onChange={this.onInputChange}\r\n                        />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchBar;","import axios from 'axios';\r\n\r\nconst KEY = 'AIzaSyCD-Lns6ifoaLLOnlNscswZWR5o351xwPM';\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://www.googleapis.com/youtube/v3',\r\n    params: {\r\n        part: 'snippet',\r\n        maxResults: 5,\r\n        key: KEY\r\n    }\r\n});","import './VideoItem.css';\r\nimport React from 'react';\r\n\r\nconst VideoItem = (props) => {\r\n    return(\r\n        <div onClick={() => props.onVideoSelect(props.video)} className=\"video-item item\">\r\n            <img\r\n                alt={props.video.snippet.title}\r\n                className=\"ui image\" \r\n                src = {props.video.snippet.thumbnails.medium.url} \r\n            />\r\n            <div className=\"content\">\r\n                <div className=\"header\">{props.video.snippet.title}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default VideoItem;","import React from 'react';\r\nimport VideoItem from './VideoItem';\r\n\r\nconst VideoList = (props) => {\r\n    \r\n    const rederedList = props.videos.map((video) => {\r\n        return <VideoItem key={video.id.videoId} video={video} onVideoSelect={props.onVideoSelect} />\r\n    });\r\n\r\n    return <div className=\"ui relaxed divided list\">{rederedList}</div>\r\n}\r\n\r\nexport default VideoList;","import React from 'react';\r\n\r\nconst VideoDetail = (props) => {\r\n\r\n    if(!props.video){\r\n        return <div>Loading...</div>\r\n    }\r\n\r\n    const videoSrc = `https://youtube.com/embed/${props.video.id.videoId}`;\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"ui embed\">\r\n                <iframe src={videoSrc} />\r\n            </div>\r\n            <div className=\"ui segment\">\r\n                <h4 className=\"ui header\">{props.video.snippet.title}</h4>\r\n                <p>{props.video.snippet.description}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default VideoDetail;","import React from 'react';\r\nimport SearchBar from './SearchBar'; \r\nimport youtube from '../apis/youtube';\r\nimport VideoList from './VideoList'; \r\nimport VideoDetail from './VideoDetail';\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n    state = { videos: [], selectedVideo: null };\r\n\r\n    componentDidMount() {\r\n        this.onTermSubmit('buildings');\r\n    }\r\n\r\n    onTermSubmit = async (term) => {\r\n        \r\n        const response = await youtube.get('/search', {\r\n            params: {\r\n                q: term\r\n            }\r\n        });\r\n\r\n        this.setState({ \r\n            videos: response.data.items,\r\n            selectedVideo: response.data.items[0]\r\n        });\r\n    };\r\n\r\n    onVideoSelect = video => {\r\n        this.setState({selectedVideo: video});\r\n        console.log('From the App!', video);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"ui container\">\r\n                <SearchBar onFormSubmit={this.onTermSubmit} />\r\n                <div className=\"ui grid\">\r\n                    <div className=\"ui row\">\r\n                        <div className=\"eleven wide column\">\r\n                            <VideoDetail video={this.state.selectedVideo}></VideoDetail>\r\n                        </div>\r\n                        <div className=\"five wide column\">\r\n                            <VideoList onVideoSelect={this.onVideoSelect} videos={this.state.videos} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.querySelector('#root')\r\n);"],"sourceRoot":""}